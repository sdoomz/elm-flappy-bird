var _evancz$elm_graphics$Collage$collage = _evancz$elm_graphics$Native_Collage.collage;
var _evancz$elm_graphics$Collage$LineStyle = F6(
	function (a, b, c, d, e, f) {
		return {color: a, width: b, cap: c, join: d, dashing: e, dashOffset: f};
	});
var _evancz$elm_graphics$Collage$Form_elm_builtin = function (a) {
	return {ctor: 'Form_elm_builtin', _0: a};
};
var _evancz$elm_graphics$Collage$form = function (f) {
	return _evancz$elm_graphics$Collage$Form_elm_builtin(
		{theta: 0, scale: 1, x: 0, y: 0, alpha: 1, form: f});
};
var _evancz$elm_graphics$Collage$move = F2(
	function (_p1, _p0) {
		var _p2 = _p1;
		var _p3 = _p0;
		var _p4 = _p3._0;
		return _evancz$elm_graphics$Collage$Form_elm_builtin(
			_elm_lang$core$Native_Utils.update(
				_p4,
				{x: _p4.x + _p2._0, y: _p4.y + _p2._1}));
	});
var _evancz$elm_graphics$Collage$moveX = F2(
	function (x, _p5) {
		var _p6 = _p5;
		var _p7 = _p6._0;
		return _evancz$elm_graphics$Collage$Form_elm_builtin(
			_elm_lang$core$Native_Utils.update(
				_p7,
				{x: _p7.x + x}));
	});
var _evancz$elm_graphics$Collage$moveY = F2(
	function (y, _p8) {
		var _p9 = _p8;
		var _p10 = _p9._0;
		return _evancz$elm_graphics$Collage$Form_elm_builtin(
			_elm_lang$core$Native_Utils.update(
				_p10,
				{y: _p10.y + y}));
	});
var _evancz$elm_graphics$Collage$scale = F2(
	function (s, _p11) {
		var _p12 = _p11;
		var _p13 = _p12._0;
		return _evancz$elm_graphics$Collage$Form_elm_builtin(
			_elm_lang$core$Native_Utils.update(
				_p13,
				{scale: _p13.scale * s}));
	});
var _evancz$elm_graphics$Collage$rotate = F2(
	function (t, _p14) {
		var _p15 = _p14;
		var _p16 = _p15._0;
		return _evancz$elm_graphics$Collage$Form_elm_builtin(
			_elm_lang$core$Native_Utils.update(
				_p16,
				{theta: _p16.theta + t}));
	});
var _evancz$elm_graphics$Collage$alpha = F2(
	function (a, _p17) {
		var _p18 = _p17;
		return _evancz$elm_graphics$Collage$Form_elm_builtin(
			_elm_lang$core$Native_Utils.update(
				_p18._0,
				{alpha: a}));
	});
var _evancz$elm_graphics$Collage$Grad = function (a) {
	return {ctor: 'Grad', _0: a};
};
var _evancz$elm_graphics$Collage$Texture = function (a) {
	return {ctor: 'Texture', _0: a};
};
var _evancz$elm_graphics$Collage$Solid = function (a) {
	return {ctor: 'Solid', _0: a};
};
var _evancz$elm_graphics$Collage$Padded = {ctor: 'Padded'};
var _evancz$elm_graphics$Collage$Round = {ctor: 'Round'};
var _evancz$elm_graphics$Collage$Flat = {ctor: 'Flat'};
var _evancz$elm_graphics$Collage$Clipped = {ctor: 'Clipped'};
var _evancz$elm_graphics$Collage$Sharp = function (a) {
	return {ctor: 'Sharp', _0: a};
};
var _evancz$elm_graphics$Collage$defaultLine = {
	color: _elm_lang$core$Color$black,
	width: 1,
	cap: _evancz$elm_graphics$Collage$Flat,
	join: _evancz$elm_graphics$Collage$Sharp(10),
	dashing: _elm_lang$core$Native_List.fromArray(
		[]),
	dashOffset: 0
};
var _evancz$elm_graphics$Collage$solid = function (clr) {
	return _elm_lang$core$Native_Utils.update(
		_evancz$elm_graphics$Collage$defaultLine,
		{color: clr});
};
var _evancz$elm_graphics$Collage$dashed = function (clr) {
	return _elm_lang$core$Native_Utils.update(
		_evancz$elm_graphics$Collage$defaultLine,
		{
			color: clr,
			dashing: _elm_lang$core$Native_List.fromArray(
				[8, 4])
		});
};
var _evancz$elm_graphics$Collage$dotted = function (clr) {
	return _elm_lang$core$Native_Utils.update(
		_evancz$elm_graphics$Collage$defaultLine,
		{
			color: clr,
			dashing: _elm_lang$core$Native_List.fromArray(
				[3, 3])
		});
};
var _evancz$elm_graphics$Collage$Smooth = {ctor: 'Smooth'};
var _evancz$elm_graphics$Collage$FGroup = F2(
	function (a, b) {
		return {ctor: 'FGroup', _0: a, _1: b};
	});
var _evancz$elm_graphics$Collage$group = function (fs) {
	return _evancz$elm_graphics$Collage$form(
		A2(_evancz$elm_graphics$Collage$FGroup, _evancz$elm_graphics$Transform$identity, fs));
};
var _evancz$elm_graphics$Collage$groupTransform = F2(
	function (matrix, fs) {
		return _evancz$elm_graphics$Collage$form(
			A2(_evancz$elm_graphics$Collage$FGroup, matrix, fs));
	});
var _evancz$elm_graphics$Collage$FElement = function (a) {
	return {ctor: 'FElement', _0: a};
};
var _evancz$elm_graphics$Collage$toForm = function (e) {
	return _evancz$elm_graphics$Collage$form(
		_evancz$elm_graphics$Collage$FElement(e));
};
var _evancz$elm_graphics$Collage$FImage = F4(
	function (a, b, c, d) {
		return {ctor: 'FImage', _0: a, _1: b, _2: c, _3: d};
	});
var _evancz$elm_graphics$Collage$sprite = F4(
	function (w, h, pos, src) {
		return _evancz$elm_graphics$Collage$form(
			A4(_evancz$elm_graphics$Collage$FImage, w, h, pos, src));
	});
var _evancz$elm_graphics$Collage$FText = function (a) {
	return {ctor: 'FText', _0: a};
};
var _evancz$elm_graphics$Collage$text = function (t) {
	return _evancz$elm_graphics$Collage$form(
		_evancz$elm_graphics$Collage$FText(t));
};
var _evancz$elm_graphics$Collage$FOutlinedText = F2(
	function (a, b) {
		return {ctor: 'FOutlinedText', _0: a, _1: b};
	});
var _evancz$elm_graphics$Collage$outlinedText = F2(
	function (ls, t) {
		return _evancz$elm_graphics$Collage$form(
			A2(_evancz$elm_graphics$Collage$FOutlinedText, ls, t));
	});
var _evancz$elm_graphics$Collage$FShape = F2(
	function (a, b) {
		return {ctor: 'FShape', _0: a, _1: b};
	});
var _evancz$elm_graphics$Collage$FPath = F2(
	function (a, b) {
		return {ctor: 'FPath', _0: a, _1: b};
	});
var _evancz$elm_graphics$Collage$traced = F2(
	function (style, _p19) {
		var _p20 = _p19;
		return _evancz$elm_graphics$Collage$form(
			A2(_evancz$elm_graphics$Collage$FPath, style, _p20._0));
	});
var _evancz$elm_graphics$Collage$Fill = function (a) {
	return {ctor: 'Fill', _0: a};
};
var _evancz$elm_graphics$Collage$fill = F2(
	function (style, _p21) {
		var _p22 = _p21;
		return _evancz$elm_graphics$Collage$form(
			A2(
				_evancz$elm_graphics$Collage$FShape,
				_evancz$elm_graphics$Collage$Fill(style),
				_p22._0));
	});
var _evancz$elm_graphics$Collage$filled = F2(
	function (color, shape) {
		return A2(
			_evancz$elm_graphics$Collage$fill,
			_evancz$elm_graphics$Collage$Solid(color),
			shape);
	});
var _evancz$elm_graphics$Collage$textured = F2(
	function (src, shape) {
		return A2(
			_evancz$elm_graphics$Collage$fill,
			_evancz$elm_graphics$Collage$Texture(src),
			shape);
	});
var _evancz$elm_graphics$Collage$gradient = F2(
	function (grad, shape) {
		return A2(
			_evancz$elm_graphics$Collage$fill,
			_evancz$elm_graphics$Collage$Grad(grad),
			shape);
	});
var _evancz$elm_graphics$Collage$Line = function (a) {
	return {ctor: 'Line', _0: a};
};
var _evancz$elm_graphics$Collage$outlined = F2(
	function (style, _p23) {
		var _p24 = _p23;
		return _evancz$elm_graphics$Collage$form(
			A2(
				_evancz$elm_graphics$Collage$FShape,
				_evancz$elm_graphics$Collage$Line(style),
				_p24._0));
	});
var _evancz$elm_graphics$Collage$Path = function (a) {
	return {ctor: 'Path', _0: a};
};
var _evancz$elm_graphics$Collage$path = function (ps) {
	return _evancz$elm_graphics$Collage$Path(ps);
};
var _evancz$elm_graphics$Collage$segment = F2(
	function (p1, p2) {
		return _evancz$elm_graphics$Collage$Path(
			_elm_lang$core$Native_List.fromArray(
				[p1, p2]));
	});
var _evancz$elm_graphics$Collage$Shape = function (a) {
	return {ctor: 'Shape', _0: a};
};
var _evancz$elm_graphics$Collage$polygon = function (points) {
	return _evancz$elm_graphics$Collage$Shape(points);
};
var _evancz$elm_graphics$Collage$rect = F2(
	function (w, h) {
		var hh = h / 2;
		var hw = w / 2;
		return _evancz$elm_graphics$Collage$Shape(
			_elm_lang$core$Native_List.fromArray(
				[
					{ctor: '_Tuple2', _0: 0 - hw, _1: 0 - hh},
					{ctor: '_Tuple2', _0: 0 - hw, _1: hh},
					{ctor: '_Tuple2', _0: hw, _1: hh},
					{ctor: '_Tuple2', _0: hw, _1: 0 - hh}
				]));
	});
var _evancz$elm_graphics$Collage$square = function (n) {
	return A2(_evancz$elm_graphics$Collage$rect, n, n);
};
var _evancz$elm_graphics$Collage$oval = F2(
	function (w, h) {
		var hh = h / 2;
		var hw = w / 2;
		var n = 50;
		var t = (2 * _elm_lang$core$Basics$pi) / n;
		var f = function (i) {
			return {
				ctor: '_Tuple2',
				_0: hw * _elm_lang$core$Basics$cos(t * i),
				_1: hh * _elm_lang$core$Basics$sin(t * i)
			};
		};
		return _evancz$elm_graphics$Collage$Shape(
			A2(
				_elm_lang$core$List$map,
				f,
				_elm_lang$core$Native_List.range(0, n - 1)));
	});
var _evancz$elm_graphics$Collage$circle = function (r) {
	return A2(_evancz$elm_graphics$Collage$oval, 2 * r, 2 * r);
};
var _evancz$elm_graphics$Collage$ngon = F2(
	function (n, r) {
		var m = _elm_lang$core$Basics$toFloat(n);
		var t = (2 * _elm_lang$core$Basics$pi) / m;
		var f = function (i) {
			return {
				ctor: '_Tuple2',
				_0: r * _elm_lang$core$Basics$cos(t * i),
				_1: r * _elm_lang$core$Basics$sin(t * i)
			};
		};
		return _evancz$elm_graphics$Collage$Shape(
			A2(
				_elm_lang$core$List$map,
				f,
				_elm_lang$core$Native_List.range(0, m - 1)));
	});
